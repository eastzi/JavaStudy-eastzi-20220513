package j14_추상;

/*
 * abstract(추상)
 * 1. abstract 는 {}를 가질수 없음({} = body)
 * 2. 클래스 또한 추상클래스를 가져야 함.(메소드도 추상, 클래스도 추상)
 * 3. 강제성을 가짐
 * 4. 꼭 구현을 해주고 싶은 사항들은 추상을 사용. 꼭 따르도록 유도.
 * 
 * <추상 메소드> 
 * 1. 리턴타입 앞에 abstract 키워드가 붙는다.  
 * 2. 추상 메소드는 일반 클래스 안에 선언 할 수 없다. 추상 클래스 속에 선언
 * 3. 상속 또는 구현된 클래스에서 무조건 override(재정의)가 되어야 한다. 
 * 
 * <추상 클래스>
 * 1. 클래스 타입 앞에 abstract 키워드가 붙는다.
 * 2. 추상 클래스는 생성할 수 없다. (new 클래스명 할 수 없다는 뜻, 단순 설계도 역할)
 * 3. 추상 메소드를 포함 할 수 있다. 따라서 추상 메소드가 필수요소가 아님. 
 * 
 */ 

//추상 클래스 - 추상, 일반 메소드를 가질 수 있음.
public abstract class Factory {
	
	//추상 메소드
	public abstract void start(); //메소드는 선언되었지만 바디속 명령문이 없으므로 아무런 출력이 없음. 따라서
								//상속된 클래스 안에서 무조건 override가 이루어져야 함.
	
	//public abstract void start() {
//		System.out.println("공장을 가동합니다."); ==> 명령문은 큰 역할을 하지 않으므로 공란해줘도 됨. ==> 추상(body를 제외해야함)
	//}											//단, 메소드는 필수요소.
	
	//일반 메소드
	public void stop() { //override가 필수가 아님. 바디가 있기 때문
		System.out.println("공장을 멈춥니다.");
	}
	
	private void test() {
		
	}
	
}
